<?php

// src/OC/PlatformBundle/DataFixtures/ORM/LoadCategory.php

namespace OC\PlatformBundle\DataFixtures\ORM;

use Doctrine\Common\DataFixtures\FixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;
use OC\PlatformBundle\Entity\Advert;
use OC\PlatformBundle\Entity\Application;

class LoadAdvert implements FixtureInterface {

    // Dans l'argument de la méthode load, l'objet $manager est l'EntityManager
    public function load(ObjectManager $manager) {
        $advert = new Advert();
        $advert->setTitle('Recherche développeur Symfony2.');
        $advert->setAuthor('Alexandre');
        $advert->setContent("Nous recherchons un dÃ©veloppeur Symfony2 dÃ©butant sur Lyon. Blablaâ€¦");

        // CrÃ©ation d'une premiÃ¨re candidature
        $application1 = new Application();
        $application1->setAuthor('Marine');
        $application1->setContent("J'ai toutes les qualités requises.");

        // CrÃ©ation d'une deuxiÃ¨me candidature par exemple
        $application2 = new Application();
        $application2->setAuthor('Pierre');
        $application2->setContent("Je suis très motivé.");

        // On lie les candidatures Ã  l'annonce
        $application1->setAdvert($advert);
        $application2->setAdvert($advert);

        // On rÃ©cupÃ¨re l'EntityManager
        $em = $manager;

        // Ã‰tape 1 : On Â« persiste Â» l'entitÃ©
        $em->persist($advert);

        // Ã‰tape 1 bis : pour cette relation pas de cascade lorsqu'on persiste Advert, car la relation est
        // dÃ©finie dans l'entitÃ© Application et non Advert. On doit donc tout persister Ã  la main ici.
        $em->persist($application1);
        $em->persist($application2);

        // Ã‰tape 2 : On Â« flush Â» tout ce qui a Ã©tÃ© persistÃ© avant
        $em->flush();
    }

}
